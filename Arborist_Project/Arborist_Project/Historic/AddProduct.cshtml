@using System.Data.SqlClient;
@using System.Configuration;

@{
    Page.Title = "Add a Product";
    Layout = "~/Layout/Layout.cshtml";


    Validation.RequireField("name", "You must enter a name");
    Validation.RequireField("description", "description is required");
    Validation.RequireField("price", "You haven't entered a price");

    var name = "";
    var description = "";
    var price = "";

    if (IsPost && Validation.IsValid())
    {
        name = Request.Form["Name"];
        description = Request.Form["Description"];
        price = Request.Form["Price"];
        string conStr = ConfigurationManager.ConnectionStrings["ConStr"].ConnectionString;
        using (SqlConnection con = new SqlConnection(conStr))
        {
            con.Open();
            string query = string.Format("INSERT INTO Products (Name, Description, Price) Values('{0}', '{1}', '{2}')", name, description, price);
            using (SqlCommand cmd = new SqlCommand(query, con))
            {
                var result = cmd.ExecuteScalar();
            }
        }

        Response.Redirect("~/ListProducts.cshtml");
    }
}

<h2>Add a Product</h2>
@Html.ValidationSummary()
<form method="post">
    <fieldset>
        <legend>Product Information</legend>
        <p>
            <label for="name">Name:</label>
            <input type="text" name="name" value="@Request.Form["name"]" />
            @Html.ValidationMessage("name")
        </p>

        <p>
            <label for="description">Description:</label>
            <input type="text" name="description" value="@Request.Form["description"]" />
            @Html.ValidationMessage("description")
        </p>

        <p>
            <label for="price">Price:</label>
            <input type="text" name="price" value="@Request.Form["price"]" />
            @Html.ValidationMessage("price")
        </p>

        <p><input type="submit" name="buttonSubmit" value="Add Product" /></p>
    </fieldset>
</form>
